package com.itheima62.mobileguard.activities;

import java.util.List;

import com.itheima62.mobileguard.R;
import com.itheima62.mobileguard.dao.AntiVirusDao;
import com.itheima62.mobileguard.domain.AppBean;
import com.itheima62.mobileguard.engine.AppManagerEngine;

import android.app.Activity;
import android.graphics.Color;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import android.view.animation.Animation;
import android.view.animation.Interpolator;
import android.view.animation.RotateAnimation;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;

/**
 * 扫描病毒的界面
 * @author Administrator
 *
 */
public class AntivirusActivity extends Activity {
	protected static final int SCANNING = 1;
	protected static final int FINISH = 2;
	protected static final int MESSAGE = 3;
	private ImageView iv_scan;
	private TextView tv_scanappname;
	private ProgressBar pb_scan;
	private LinearLayout ll_scancontent;
	private RotateAnimation ra;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		initView();//初始化界面
		initAnimation();//初始化动画
		startScan();//开始扫描
	}
	private int progress;//进度条的进度
	private Handler handler = new Handler(){
		

		public void handleMessage(android.os.Message msg) {
			switch (msg.what) {
			case SCANNING://扫描状态
				iv_scan.startAnimation(ra);//扫描动画
				
				break;
			case MESSAGE://扫描一个apk
				pb_scan.setMax(allApks.size());//设置进度条最大值
				pb_scan.setProgress(progress);
				AntiVirusBean bean = (AntiVirusBean) msg.obj;
				TextView tv = new TextView(AntivirusActivity.this);
				if (bean.siVirus) {
					tv.setTextColor(Color.RED);
				} else {
					tv.setTextColor(Color.BLACK);
				}
				tv.setText(bean.packName);//包名
				
				tv_scanappname.setText("正在扫描:" + bean.packName);
				//加到线性布局
				ll_scancontent.addView(tv, 0);//每次加到最前面
				
				break;
			case FINISH://扫描完成
				iv_scan.clearAnimation();//清除动画
				break;

			default:
				break;
			}
			
		};
		
	};
	private AntiVirusDao dao;
	private List<AppBean> allApks;

	private class AntiVirusBean{
		String packName;
		boolean siVirus;
	}
	private void startScan() {
		//耗时操作
		new Thread(){
			

			public void run() {
				
				
				handler.obtainMessage(SCANNING).sendToTarget();//开启扫描动画
				allApks = AppManagerEngine.getAllApks(getApplicationContext());
				//获取所有安装的apk
				
				
				AntiVirusBean bean = new AntiVirusBean();//存放每个apk扫描的结果信息
				for (AppBean appBean : allApks) {
					bean.packName = appBean.getPackName();
					if (dao.isVirus(appBean.getApkPath())){
						//是病毒
						bean.siVirus = true;
					} else {
						//不是病毒
						bean.siVirus = false;
					}
					progress++;
					Message msg = handler.obtainMessage(MESSAGE);
					msg.obj = bean;
					handler.sendMessage(msg);
					
					SystemClock.sleep(50);
				}
				
				handler.obtainMessage(FINISH).sendToTarget();//发送扫描完成的消息
			};
		}.start();
	}



	private void initAnimation() {
		//旋转动画
		ra = new RotateAnimation(0, 360,
				Animation.RELATIVE_TO_SELF, 0.5f, 
				Animation.RELATIVE_TO_SELF, 0.5f);
		ra.setDuration(600);
		ra.setRepeatCount(Animation.INFINITE);//无限次数
		//修改旋转动画插入器 ，数学函数
		ra.setInterpolator(new Interpolator() {
			
			@Override
			public float getInterpolation(float x) {
				// y
				return x;
			}
		});
		
	}

	private void initView() {
		setContentView(R.layout.activity_antivirus);
		
		//扫描病毒的扇形
		
		iv_scan = (ImageView) findViewById(R.id.iv_antivirus_scan);
		
		//扫描app的名字的显示
		tv_scanappname = (TextView) findViewById(R.id.tv_antivirus_title);
		
		//扫描的进度
		pb_scan = (ProgressBar) findViewById(R.id.pb_antivirus_scanprogress);
		
		//扫描结果的显示
		ll_scancontent = (LinearLayout) findViewById(R.id.ll_antivirus_results);
		
		dao = new AntiVirusDao();
		
	}
}
